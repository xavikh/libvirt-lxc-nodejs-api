extends layout

mixin vm(name, vcpu, ram, allocation, capacity, status)
    td.name #{name}
    td #{vcpu}
    td.ram #{ram}
    td.storage #{allocation} / #{capacity}
    td.status
        case status
            when "running"
                a.btn-flat.green.non-clickable #{status}
            when "shut off"
                a.btn-flat.red.non-clickable #{status}
            default
                a.btn-flat.orange.non-clickable #{status}

    td.action
        a.waves-effect.waves-light.btn-small.light-blue(onclick="change_vm_status('" + name + "', 'start')")
            i.material-icons play_arrow
        a.waves-effect.waves-light.btn-small.amber(onclick="change_vm_status('" + name + "', 'reboot')")
            i.material-icons replay
        a.waves-effect.waves-light.btn-small.orange(onclick="change_vm_status('" + name + "', 'shutdown')")
            i.material-icons stop
        a.waves-effect.waves-light.btn-small.red(onclick="change_vm_status('" + name + "', 'force-shutdown')")
            i.material-icons power
        a.waves-effect.waves-light.btn-small.grey.darken-4(onclick="open_delete_modal('" + name + "')")
            i.material-icons delete
        //a.waves-effect.waves-light.btn-small.dropdown-trigger.grey.darken-2(data-target='dropdown1')
        //    i.material-icons more_vert



block content

    #modalCreateVm.modal
        .modal-content
            form.col.s12
                h4 Create a new Virtual Machine
                .row
                    .col.s12
                        .input-field
                            input#vmname.validate(type="text")
                            label(for="vmname") Name
                        #slider-step-cpu
                        p#slider-step-cpu-value

                        #slider-step-ram
                        p#slider-step-ram-value

                        #slider-step-st
                        p#slider-step-st-value
        .modal-footer
            a.modalBtn.modal-action.waves-effect.waves-green.btn(href="#!" onclick="create_vm()") Create
            a.modal-action.modal-close.waves-effect.waves-red.btn.red(href="#!") Cancel

    #modalDeleteVm.modal
        .modal-content
            h4 Delete a Virtual Machine
            .row
                .col.s12
                    p Are you sure you want to delete this VM?
                    p: label
                        input#deleteStorage.filled-in(type="checkbox" checked="checked")
                        span Delete storage

        .modal-footer
            a.modalBtn.modal-action.modal-close.waves-effect.waves-red.btn.red(href="#!" onclick="remove_vm()") Delete
            a.modal-action.modal-close.waves-effect.waves-grey.btn.grey.lighten-1(href="#!") Cancel

    //ul#dropdown1.dropdown-content
    //    li: a(href="#!") one
    //    li: a(href="#!") two
    //    li.divider(tabindex="-1")
    //    li: a(href="#!") three
    //    li: a(href="#!")
    //        i.material-icons view_module
    //        | four
    //    li: a(href="#!")
    //        i.material-icons cloud
    //        | five


    include header-nav

    main
        .fixed-action-btn
            a.btn-floating.btn-large.red.modal-trigger(href="#modalCreateVm")
                i.large.material-icons add
            ul
                li: a.btn-floating.yellow.darken-1.modal-trigger(href="#modalCreateVm"): i.material-icons content_copy

        include sidebar

        -var emptyList = false
        .table-container
            table.centered.highlight
                thead
                    tr
                        th Name
                        th vCpu
                        th Ram
                        th Volume
                        th Status
                        th Action
                tbody
                    if !data.domains || data.domains.length < 1
                        -emptyList = true
                    else
                        each vm in data.domains
                            -allocation = 0
                            -capacity = 0
                            each vol in vm.volumes
                                -allocation += vol.allocation
                                -capacity += vol.capacity
                            tr: +vm(vm.name, vm.vcpus, vm.memory / 1048576, allocation / 1048576, capacity / 1048576, vm.state)

        if emptyList
            p.center Empty list

    include main_scripts
    script(src="/javascripts/initMaterialize.js")
    script(src="/javascripts/api_calls/req_config.js")
    script(src="/javascripts/api_calls/token_manager.js")
    script(src="/javascripts/api_calls/api_req.js")
